 // порядок элементов в массива PHP

 /* Как вы уже знаете, в обычных массивах элементы
 располагаются в строгом порядке, ведь позиция каждого
 элемента определяет его ключ. В ассоциативных массивах
 мы сами назначаем ключи, поэтому порядок следования
 не имеет значения.

 Для примера рассмотрим вот такой ассоциативны массив: */

 $arr = [
 1 => 'value1',
 2 => 'value2',
 3 => 'value3'
 ];

 echo $arr[1] . PHP_EOL;
 echo $arr[2] . PHP_EOL;
 echo $arr[3] . PHP_EOL;

 /* Если переставить элементы этого массива
 в произвольном порядке (конечно же вместе с ключами),
 то ничего не изменится в работе нашего массива */


 $arr = [
 3 => 'value3',
 1 => 'value1',
 2 => 'value2',
 ];

 echo $arr[1] . PHP_EOL;
 echo $arr[2] . PHP_EOL;
 echo $arr[3] . PHP_EOL;

 /* Кроме того, числовые ключи не обязательно должны иметь все
 значения без дырок. У нас могут быть произвольные числа и это не
 будет приводить ни к каким проблемам. */


 $arr = [
 23 => 'value3',
 7 => 'value1',
 50 => 'value2',
 ];

 echo $arr[7] . PHP_EOL;
 echo $arr[50] . PHP_EOL;
 echo $arr[23] . PHP_EOL;