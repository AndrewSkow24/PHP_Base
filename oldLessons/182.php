<?php

include "functions.php";

/* Введение в регулярные выражения 

Регулярные выражения - это такие команды для 
сложного поиска и замены. Они позволяют делать очень 
интересные вещи, но, к сожалению, довольно тяжелы в 
усвоении. 

Существует несколько функций в PHP для работы с регулярными 
выражениями. Мы начнём знакомится с ними на примере preg_replace. 

Эта функция первым параметром принимает что менять, а вторым на 
что менять, а третьим строку, в которой нужно заменять 

preg_replace (
    что менять,
    на что менять,
    строка
);

При этом первым параметром наша функция принимает не 
просто строку, а регулярное выражение, представляющее 
собой строку с набором команд, расположенных внутри символов 
решётки. 

# - ограничители регулярных выражений. 

После ограничителей можно писать модификаторы - 
команды, которые изменяют общие свойства регулярного 
выражения. 

Сами регулярные выражения состоят из двух типов символов: 
- из тех, которые обозначают сами себя
- из символов-команд, которые называются специальные символы. 

Буквы и цифры обозначают сами себя 

В следующем примере мы с помощью регулярного выражения 
заменим букву 'a' на !:

*/

echo preg_replace("#a#", '!', 'bab') . "\n";

/* а вот точка является специальным символом и обозначает 
любой символ. В следующем примере мы найдём строку 
по такому шаблону: буква 'x' затем любой символ, 
затем опять буква 'x' */

echo preg_replace("#x.x#", '!', 'xax eee') . "\n"; // ! eee


task(1);
// Дана строка:
$str = 'ahb acb aeb aeeb adcb axeb';
// Напишите регулярку, которая найдет строки 
// 'ahb',
// 'acb',
// 'aeb'
// по шаблону: буква 'a', любой символ, буква 'b'.
echo "Исходная строка: $str\n";
echo "Применение регулярки:\n";
echo preg_replace("#a.b#", "###", $str);


// №2⊗ppPmRgInr
task(2);
// Дана строка:
$str = 'ahb acb aeb aeeb adcb axeb';
// Напишите регулярку, которая найдет строки 'aeeb', 'adcb', 'axeb' 
//по шаблону: буква 'a', два любых символа, буква 'b'.
$str = preg_replace("#a..b#", "___", $str);
echo $str;
