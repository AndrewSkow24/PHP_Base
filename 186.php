<?php

include "functions.php";

/* Если экранировать обычный символ ничего страшного не случится - 
он всё равно будет обозначать сам себя. Исключение цифры - 
их нельзя экранировать. 

Часто возникает сомнение является ли данный символ специальным. 
Некоторые доходят до того, что экранируют все подозрительные 
символы подряд. Однако, это плохая практика - захламляет регулярку 
обратными слэшами. 

Являются спецсимволами: 
$ ^ . * \ / {} [] () |

Не являются спецсимволами: 
@ : , " ; - _ = <> % # ~ ` & ! 

*/

// №1⊗ppPmRgLSRCh
task(1);
// Дана строка:
$str = 'a.a aba aea';
// Напишите регулярку, которая найдет строку 'a.a', не захватив остальные.
echo preg_replace("#a\.a#", "!", $str);


// №2⊗ppPmRgLSRCh
task(2);
// Дана строка:
$str = '2+3 223 2223';
// Напишите регулярку, которая найдет строку '2+3', не захватив остальные.
echo preg_replace("#2\+3#", "!", $str);


// №3⊗ppPmRgLSRCh
task(3);
// Дана строка:
$str = '23 2+3 2++3 2+++3 345 567';
// Напишите регулярку, которая найдет строки '2+3', '2++3', '2+++3', не захватив остальные (+ может быть любое количество).
echo preg_replace("#2(\+)+3#", "!", $str);


// №4⊗ppPmRgLSRCh
task(4);
// Дана строка:
$str = '23 2+3 2++3 2+++3 445 677';
// Напишите регулярку, которая найдет строки '23', '2+3', '2++3', '2+++3', не захватив остальные.
echo preg_replace("#2(\+)*3#", "!", $str);


// №5⊗ppPmRgLSRCh
task(5);
// Дана строка:

$str = '*+ *q+ *qq+ *qqq+ *qqq qqq+';

// Напишите регулярку, которая найдет строки '*q+', '*qq+', '*qqq+', не захватив остальные.
echo preg_replace("#\*q+\+#", "!", $str);
// №6⊗ppPmRgLSRCh
task(6);
// Дана строка:
$str = '[abc] {abc} abc (abc) [abc]';
// Напишите регулярку, которая найдет строки в квадратных скобках и заменят их на '!'.
echo preg_replace("#\[...\]#", "!", $str);
